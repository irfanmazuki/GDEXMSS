@model GDEXMSS.Models.combinedOrderModel
@{
    ViewBag.Title = "Process Order";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
    <!-- Start Checkout -->
    <section class="shop checkout section">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="checkout-form">
                        <h2>Proccess Order</h2>
                        <p></p>
                        <!-- Form -->
                        @using (Html.BeginForm("Process", "order", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            //Hidden for the order
                            @Html.HiddenFor(model => model.order.shippedDT, new { htmlAttributes = new { @readonly = "readonly" } })
                            @Html.HiddenFor(model => model.order.orderID, new { htmlAttributes = new { @readonly = "readonly" } })
                            @Html.HiddenFor(model => model.order.pointRedeemed, new { htmlAttributes = new { @readonly = "readonly" } })
                            @Html.HiddenFor(model => model.order.amountPaid, new { htmlAttributes = new { @readonly = "readonly" } })
                            //Hidden for the orderShippingInfo
                            @Html.HiddenFor(model => model.orderShippingInfo.orderID, new { htmlAttributes = new { @readonly = "readonly" } })
                            @Html.HiddenFor(model => model.orderShippingInfo.cost, new { htmlAttributes = new { @readonly = "readonly" } })
                            @Html.HiddenFor(model => model.orderShippingInfo.isPickup, new { htmlAttributes = new { @readonly = "readonly" } })
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-group">
                                        <label>Date Time</label>
                                        @Html.EditorFor(model => model.order.createdDT, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.order.createdDT, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-group">
                                        <label>Order ID</label>
                                        @Html.EditorFor(model => model.order.orderID, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.order.orderID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-group">
                                        <label>Customer Name</label>
                                        @Html.EditorFor(model => model.orderShippingInfo.name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.orderShippingInfo.name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-group">
                                        <label>Customer ID</label>
                                        @Html.EditorFor(model => model.order.userID, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.orderShippingInfo.name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-group">
                                        <label>Address</label>
                                        @Html.TextAreaFor(model => model.orderShippingInfo.address, new { cols = 35, @rows = 3, htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.orderShippingInfo.address, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-group">
                                        <label>Poscode</label>
                                        @Html.EditorFor(model => model.orderShippingInfo.poscode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.orderShippingInfo.poscode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-group">
                                        <label>City</label>
                                        @Html.EditorFor(model => model.orderShippingInfo.city, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.orderShippingInfo.city, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-group">
                                        <label>State</label>
                                        @Html.EditorFor(model => model.orderShippingInfo.state, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.orderShippingInfo.state, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-group">
                                        <label>Tracking Number</label>
                                        @Html.EditorFor(model => model.order.consignment, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.order.consignment, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-group">
                                        <label>Type of delivery</label>
                                        @Html.EditorFor(model => model.orderShippingInfo.type, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.orderShippingInfo.type, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-group">
                                        <label>Branch ID</label>
                                        @Html.EditorFor(model => model.orderShippingInfo.branchID, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.orderShippingInfo.branchID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="container">
                                <div class="col-8">
                                    <div class="card-body table-responsive p-0">
                                        <table class="table table-hover text-nowrap">
                                            <h6>Order Details</h6>
                                            <thead>
                                                <tr>
                                                    <th>Item</th>
                                                    <th>Quantity</th>
                                                    <th>Price per unit</th>
                                                    <th>Total Price</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @{ decimal totalcost = 0;}
                                                @foreach (var item in Model.listItems)
                                                {
                                                    <tr>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.productName)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.quantity)
                                                        </td>
                                                        <td>
                                                            RM @Html.DisplayFor(modelItem => item.unitCost)
                                                        </td>
                                                        <td>
                                                            RM @Html.DisplayFor(modelItem => item.unitCost)
                                                        </td>
                                                        @{ totalcost += item.unitCost.GetValueOrDefault();}
                                                    </tr>
                                                }
                                                <tr>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <th>Sub Total</th>
                                                    <td>RM @totalcost</td>
                                                </tr>
                                                <tr>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <th>Points Used</th>
                                                    <td>0</td>
                                                </tr>
                                                <tr>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <th>Postage</th>
                                                    <td>RM @Html.DisplayFor(model => model.orderShippingInfo.cost)</td>
                                                </tr>
                                                <tr>
                                                    @{ totalcost += Model.orderShippingInfo.cost.GetValueOrDefault();}
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <th>Total</th>
                                                    <td>RM @totalcost</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-4">
                                    <input type="submit" value="Approve" class="btn btn-default bg-primary" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-4">
                                    <input type="submit" value="Cancel" class="btn bg-danger" />
                                </div>
                            </div>
                        }
                        <!--/ End Form -->
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!--/ End Checkout -->

