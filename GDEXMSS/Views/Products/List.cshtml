@model IEnumerable<GDEXMSS.Models.product>
@{
    ViewBag.Title = "Products List";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<!-- Start Checkout -->
<section class="shop checkout section">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        @using (Html.BeginForm("List", "Products", FormMethod.Post, new { id = "Form1", @class = "form-group" }))
                        {
                            <ul class="navbar nav ml-auto">
                                <li class="mr-auto p-2">
                                    <h5 class="card-title"><b>Order History</b></h5>
                                </li>
                                <li class="p-2">
                                    <div style="width:220px">
                                        @Html.DropDownList("Sortby", new SelectListItem[]
                                        {
                                             new SelectListItem() { Text = "Sort By", Value="0", Disabled = true, Selected  = true },
                                             new SelectListItem() { Text = "Default", Value = "default" },
                                             new SelectListItem() { Text = "Name (Ascending)", Value = "nameasc" },
                                             new SelectListItem() { Text = "Name (Descending)", Value = "namedesc" },
                                             new SelectListItem() { Text = "Price (Ascending)", Value = "priceasc" },
                                             new SelectListItem() { Text = "Price (Descending)", Value = "pricedesc" },
                                             new SelectListItem() { Text = "Quantity (Ascending)", Value = "quantasc" },
                                             new SelectListItem() { Text = "Quantity (Descending)", Value = "quantdesc" },
                                             new SelectListItem() { Text = "Quantity Sold (Ascending)", Value = "soldasc" },
                                             new SelectListItem() { Text = "Quantity Sold (Descending)", Value = "solddesc" },
                                             new SelectListItem() { Text = "Available", Value = "available" },
                                             new SelectListItem() { Text = "Sold Out", Value = "soldout" },
                                             new SelectListItem() { Text = "Discontinued", Value = "discontinued" } },
                                             new
                                             {
                                                 @onchange = "document.getElementById('Form1').submit();",
                                                 @class = "form-group"
                                             })
                                    </div>
                                </li>
                                <li class="p-2">
                                    <div class="input-group input-group-sm" style="width: 230px;">
                                        <input type="text" name="query" class="form-control" placeholder="Search" value="@Session["query"]">
                                        <div class="input-group-append">
                                            <button type="submit" class="btn btn-default">
                                                <i class="fas fa-search"></i>
                                            </button>
                                        </div>
                                    </div>
                                </li>
                            </ul>
                        }
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body table-responsive p-0">
                        <table class="table table-hover text-nowrap">
                            <thead>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.productID)</th>
                                    <th>@Html.DisplayNameFor(model => model.name)</th>
                                    <th>@Html.DisplayNameFor(model => model.quantity)</th>
                                    <th>@Html.DisplayNameFor(model => model.quantitySold)</th>
                                    <th>@Html.DisplayNameFor(model => model.unitCost)</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.productID)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.quantity)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.quantitySold)
                                    </td>
                                    <td>
                                        RM
                                        @Html.DisplayFor(modelItem => item.unitCost)
                                    </td>
                                    <td>
                                        @if (item.isExist == false)
                                        {
                                            <h5><span class="badge bg-danger">Discontinued</span></h5>
                                        }
                                        else
                                        {
                                            if (item.quantity == 0)
                                            {
                                                <h5><span class="badge bg-warning">Sold Out</span></h5>
                                            }
                                            if (item.quantity > 0)
                                            {
                                                <h5><span class="badge bg-success">Available</span></h5>
                                            }
                                        }

                                    </td>
                                    <td>
                                        @* Route value more than 1? how *@
                                        @Html.ActionLink("Edit", "Edit", new { productID = item.productID, actions = "edit" }, new { @class = "badge bg-primary" })
                                        @Html.ActionLink("Delete", "Edit", new { productID = item.productID, actions = "delete" }, new { @class = "badge bg-danger" })
                                    </td>
                                </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
        </div>
    </div>
</section>
<!--/ End Checkout -->