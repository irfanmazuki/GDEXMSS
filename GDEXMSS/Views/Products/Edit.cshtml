@model GDEXMSS.Models.CombinedProductCategories
@{
    ViewBag.Title = "Edit Product Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
    <!-- Start Checkout -->
    <section class="shop checkout section">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="checkout-form">
                        <h2>Add new product</h2>
                        <p></p>
                        @using (Html.BeginForm("Edit", "products", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.product.isExist, new { htmlAttributes = new { @readonly = "readonly" } })
                            @Html.HiddenFor(model => model.product.productID, new { htmlAttributes = new { @readonly = "readonly" } })
                            @Html.HiddenFor(model => model.product.imagePath, new { htmlAttributes = new { @readonly = "readonly" } })
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-group">
                                        <label>Product Name<span class="text-danger">*</span></label>
                                        @Html.EditorFor(model => model.product.name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.product.name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-group">
                                        <label>Product Description<span class="text-danger">*</span></label>
                                        @Html.TextAreaFor(model => model.product.description, new { cols = 35, @rows = 3, htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.product.description, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">
                                    <div class="form-group">
                                        <label>Select categories<span class="text-danger">*</span></label>
                                        @Html.DropDownListFor(model => model.product.categoryID, Model.product.CategoriesList, new { @class = "form-control "})
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xl-3 col-lg-4 col-md-4 col-12">
                                    <div class="form-group single-product">
                                        <img class="default-img" src="@Html.DisplayFor(model => model.product.imagePath)" alt="#">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-group">
                                        <label class="form-label" for="customFile">Upload new image</label>
                                        <input type="file" class="form-control" id="ImageFile" name="ImageFile" />
                                    </div>
                                </div>
                            </div>
                            @*<div class="row">
                <div class="col-lg-6 col-md-6 col-12">
                    <div class="form-group">
                        <label>Is there variations?<span class="text-danger">*</span></label>
                        @Html.DropDownListFor(model => model.product.isVariation, new[]
                   {
                       new SelectListItem() {Text = "Yes", Value = "True"},
                       new SelectListItem() {Text = "No", Value = "False"},
                   }, "Choose an option")
                        @Html.ValidationMessageFor(model => model.product.isVariation, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-group">
                                        <label>Price per unit (RM)<span class="text-danger">*</span></label>
                                        @Html.EditorFor(model => model.product.unitCost, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.product.unitCost, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-group">
                                        <label>Product Quantity<span class="text-danger">*</span></label>
                                        @Html.EditorFor(model => model.product.quantity, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.product.quantity, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <!-- Button trigger modal -->
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#EditConfirmation">
                                Edit
                            </button>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10 text-success">
                                    <label>@ViewBag.SuccessMessage</label>
                                </div>
                            </div>


                            <!-- Modal -->
                            <div class="modal fade" id="EditConfirmation" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered" role="document">
                                    <div class="modal-content">
                                        <div class="modal-body d-flex align-items-center">
                                            <h5>Are you sure to edit the product?</h5>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                            <button type="submit" class="btn btn-primary">Confirm</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        <!--/ End Form -->
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!--/ End Checkout -->